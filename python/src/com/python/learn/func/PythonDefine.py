# Python函数的定义
#
# 定义函数，也就是创建一个函数，可以理解为创建一个具有某些用途的工具。定义函数需要用 def 关键字实现，具体的语法格式如下：
#
#   def 函数名(形参列表):
#         //由零条到多条可执行语句组成的代码块
#         [return [返回值]]
#
# 其中，用 [] 括起来的为可选择部分，即可以使用，也可以省略。
#
# 此格式中，各部分参数的含义如下：
#
#       函数名：从语法角度来看，函数名只要是一个合法的标识符即可；从程序的可读性角度来看，函数名应该由一个或多个有意义的单词连缀而成，每个单词的字母全部小写，单词与单词之间使用
#       下画线分隔。
#       形参列表：用于定义该函数可以接收的参数。形参列表由多个形参名组成，多个形参名之间以英文逗号（,）隔开。一旦在定义函数时指定了形参列表，调用该函数时就必须传入相应的参数值，
#       也就是说，谁调用函数谁负责为形参赋值。
#       注意，在创建函数时，即使函数不需要参数，也必须保留一对空的“()”，否则 Python 解释器将提示“invaild syntax”错误。另外，如果想定义一个没有任何功能的空函数，可以使用 pass 语
#       句作为占位符
def my_max(x, y):
    """
    获取两个数值之间较大数的函数。
    my_max(x, y)
    返回x、y两个参数之间较大的那个
    """
    # 定义一个变量z，该变量等于x、y中较大的值
    z = x if x > y else y
    # 返回变量z的值
    return z


# 定义一个函数，声明一个形参
def say_hi(name):
    print("===正在执行say_hi()函数===")
    return name + "，您好！"


print(my_max(1, 2))

# 为函数提供说明文档
#
# 前面介绍过可以使用 Python 内置的 help() 函数查看其他函数的帮助文档，我们也经常通过 help() 函数查看指定函数的帮助信息，这对于 Python 开发者来说非常重要。
#
# 我们还可以为函数编写说明文档，只要把一段字符串放在函数声明之后、函数体之前，这段字符串将被作为函数的部分，这个文档就是函数的说明文档。
#
# 程序既可通过 help() 函数查看函数的说明文档，也可通过函数的 __doc__ 属性访问函数的说明文档。下面程序示范了为函数编写说明文档：

# 获取函数的说明文档
help(my_max)
print(my_max.__doc__)
